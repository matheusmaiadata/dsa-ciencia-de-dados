# Projeto 13 - Sistema de Recomenda√ß√£o de Manuten√ß√£o Preditiva Integrado com IoT Para Redu√ß√£o de Paradas N√£o Planejadas

# Imports
import joblib
import streamlit as st
import numpy as np
import pandas as pd

# Carregar o modelo e o scaler salvos
model_file = 'modelos/modelo_v1.pkl'
scaler_file = 'padronizadores/scaler_v1.pkl'
modelo_dsa = joblib.load(model_file)
scaler = joblib.load(scaler_file)

# Fun√ß√£o para fazer a recomenda√ß√£o de manuten√ß√£o
def dsa_recomenda_manutencao(novo_dado):

    # Definir os nomes das colunas conforme o scaler foi ajustado
    colunas = ['vibracao', 'temperatura', 'pressao', 'umidade', 'horas_trabalho']
    
    # Converter o novo dado para DataFrame com os nomes de colunas corretos
    novo_dado_df = pd.DataFrame([novo_dado], columns = colunas)
    
    # Aplicar o scaler ao novo dado
    novo_dado_scaled = scaler.transform(novo_dado_df)
    
    # Fazer a previs√£o
    predicao = modelo_dsa.predict(novo_dado_scaled)
    predicao_proba = modelo_dsa.predict_proba(novo_dado_scaled)[:, 1]

    # Retornar a classe e a probabilidade
    return predicao[0], predicao_proba[0]

# Configura a p√°gina da aplica√ß√£o no Streamlit
st.set_page_config(page_title = "DSA Projeto 13", page_icon = ":100:", layout = "centered")

# Define o t√≠tulo da aplica√ß√£o
st.title("Sistema de Recomenda√ß√£o de Manuten√ß√£o Preventiva üåê")

# Define uma legenda explicativa da aplica√ß√£o
st.caption("Business Analytics e Machine Learning Para Projetos de Data Science")
st.caption("Data Science Academy - Projeto 13")

st.header("Insira os valores dos sensores:")
vibracao = st.number_input("Vibra√ß√£o", value=0.0)
temperatura = st.number_input("Temperatura (¬∞C)", value=0.0)
pressao = st.number_input("Press√£o (PSI)", value=0.0)
umidade = st.number_input("Umidade (%)", value=0.0)
horas_trabalho = st.number_input("Horas de Trabalho", value=0)

# Bot√£o para realizar a previs√£o
if st.button("Verificar necessidade de manuten√ß√£o"):
    novo_dado = [vibracao, temperatura, pressao, umidade, horas_trabalho]
    classe, probabilidade = dsa_recomenda_manutencao(novo_dado)
    
    # Mostrar os resultados
    st.write(f"Classe da Previs√£o: {'Realizar manuten√ß√£o' if classe == 1 else 'Nenhuma manuten√ß√£o necess√°ria'}")
    st.write(f"Probabilidade de manuten√ß√£o: {probabilidade:.2%}")
